name: Python Deploy Azure Function

on:
  workflow_call:
    inputs:
      azure-function-app-name:
        required: true
        type: string
        description: 'Azure Function App name'
      python-version:
        required: true
        type: string
        description: 'Python version to use'
      artifact-name:
        required: false
        type: string
        default: 'functionapp.zip'
        description: 'Name of the build artifact to deploy'
      slot-name:
        required: false
        type: string
        default: 'Production'
        description: 'Deployment slot name'
      location:
        required: false
        type: string
        default: 'brazilsouth'
        description: Azure region for resource creation
      resource-group:
        required: false
        type: string
        default: ''
        description: Optional explicit resource group (defaults to <app>-rg)
      plan-sku:
        required: false
        type: string
        default: 'Y1'
        description: App Service plan SKU (Y1 = Consumption)
      skip-resource-creation:
        required: false
        type: boolean
        default: false
        description: Skip creating resources (assume they exist)
      minimal-cli-output:
        required: false
        type: boolean
        default: true
        description: Use --only-show-errors to reduce Azure CLI noise while keeping errors
      timeout-minutes:
        required: false
        type: number
        default: 25
        description: Job timeout
      client-id:
        required: false
        type: string
        description: 'OIDC Client ID (if using federated credentials)'
      tenant-id:
        required: false
        type: string
        description: 'OIDC Tenant ID'
      subscription-id:
        required: false
        type: string
        description: 'OIDC Subscription ID'

      function-default-hostname:
        description: 'Default host name of the Function App'
        value: ${{ jobs.deploy.outputs.function-default-hostname }}
jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout-minutes }}
    concurrency:
      group: deploy-${{ inputs.azure-function-app-name }}-${{ inputs.slot-name }}
      cancel-in-progress: true
    outputs:
      function-default-hostname: ${{ steps.discover-func.outputs.hostname }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: functionapp

      - name: Unzip build artifact
        run: unzip ${{ inputs.artifact-name }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Login to Azure with Service Principal
        if: ${{ secrets.AZURE_CREDENTIALS != '' }}
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure with OIDC
        if: ${{ secrets.AZURE_CREDENTIALS == '' }}
        uses: azure/login@v2
        with:
          client-id: ${{ inputs.client-id }}
          tenant-id: ${{ inputs.tenant-id }}
          subscription-id: ${{ inputs.subscription-id }}
          
      - name: Ensure Azure Function App exists
        if: ${{ inputs.skip-resource-creation == false }}
        shell: bash
        run: |
          set -euo pipefail
          LOCATION="${{ inputs.location }}"
          APP_NAME="${{ inputs.azure-function-app-name }}"
          RESOURCE_GROUP_INPUT="${{ inputs.resource-group }}"
          RESOURCE_GROUP=${RESOURCE_GROUP_INPUT:-"${APP_NAME}-rg"}
          # storage account: lowercase, max 24 chars, letters+digits
          RAW="${APP_NAME//-/}storage"
          STORAGE_NAME=$(echo "$RAW" | tr -cd '[:alnum:]' | cut -c1-23)
          PLAN_NAME="${APP_NAME}-plan"
          PLAN_SKU="${{ inputs.plan-sku }}"
          if [ "${{ inputs.minimal-cli-output }}" = "true" ]; then
            AZ_FLAGS="--only-show-errors"
          else
            AZ_FLAGS=""
          fi
          echo "Using resource group: $RESOURCE_GROUP" | tee -a $GITHUB_STEP_SUMMARY
          az group show --name "$RESOURCE_GROUP" >/dev/null 2>&1 || az group create --name "$RESOURCE_GROUP" --location "$LOCATION" $AZ_FLAGS
          az storage account show --name "$STORAGE_NAME" --resource-group "$RESOURCE_GROUP" >/dev/null 2>&1 || \
            az storage account create --name "$STORAGE_NAME" --location "$LOCATION" --resource-group "$RESOURCE_GROUP" --sku Standard_LRS $AZ_FLAGS
          az functionapp plan show --name "$PLAN_NAME" --resource-group "$RESOURCE_GROUP" >/dev/null 2>&1 || \
            az functionapp plan create --name "$PLAN_NAME" --resource-group "$RESOURCE_GROUP" --location "$LOCATION" --sku "$PLAN_SKU" --is-linux $AZ_FLAGS
          if ! az functionapp show --name "$APP_NAME" --resource-group "$RESOURCE_GROUP" >/dev/null 2>&1; then
            az functionapp create \
              --name "$APP_NAME" \
              --resource-group "$RESOURCE_GROUP" \
              --plan "$PLAN_NAME" \
              --storage-account "$STORAGE_NAME" \
              --runtime python \
              --runtime-version "${{ inputs.python-version }}" \
              --os-type Linux \
              --functions-version 4 $AZ_FLAGS
            echo "Created Function App $APP_NAME" | tee -a $GITHUB_STEP_SUMMARY
          else
            echo "Function App $APP_NAME already exists." | tee -a $GITHUB_STEP_SUMMARY
          fi

      - name: Deploy to Azure Function App
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ inputs.azure-function-app-name }}
          package: .
          slot-name: ${{ inputs.slot-name }}

      - name: Discover function host
        id: discover-func
        shell: bash
        run: |
          set -euo pipefail
          APP_NAME="${{ inputs.azure-function-app-name }}"
          RG_INPUT="${{ inputs.resource-group }}"
          RG=${RG_INPUT:-"${APP_NAME}-rg"}
          HOSTNAME=$(az functionapp show --name "$APP_NAME" --resource-group "$RG" --query defaultHostName -o tsv)
          echo "hostname=$HOSTNAME" >> $GITHUB_OUTPUT
          echo "Function Host: https://$HOSTNAME" >> $GITHUB_STEP_SUMMARY