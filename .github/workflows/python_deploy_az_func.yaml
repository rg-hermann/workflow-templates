name: Python Deploy Azure Function

on:
  workflow_call:
    inputs:
      azure_function_app_name:
        required: true
        type: string
        description: 'Azure Function App name'
      python_version:
        required: true
        type: string
        description: 'Python version to use'
      artifact-name:
        required: false
        type: string
        default: 'functionapp.zip'
        description: 'Name of the build artifact to deploy'
      slot-name:
        required: false
        type: string
        default: 'Production'
        description: 'Deployment slot name'
      location:
        required: false
        type: string
        default: 'brazilsouth'
        description: Azure region for resource creation
      resource-group:
        required: false
        type: string
        default: ''
        description: Optional explicit resource group (defaults to <app>-rg)
      plan-sku:
        required: false
        type: string
        default: 'Y1'
        description: App Service plan SKU (Y1 = Consumption)
      skip-resource-creation:
        required: false
        type: boolean
        default: false
        description: Skip creating resources (assume they exist)

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-${{ inputs.azure_function_app_name }}-${{ inputs.slot-name }}
      cancel-in-progress: true
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: functionapp

      - name: Unzip build artifact
        run: unzip ${{ inputs.artifact-name }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Ensure Azure Function App exists
        if: ${{ inputs.skip-resource-creation == false }}
        run: |
          set -e
          LOCATION="${{ inputs.location }}"
          APP_NAME="${{ inputs.azure_function_app_name }}"
          RESOURCE_GROUP_INPUT="${{ inputs.resource-group }}"
          RESOURCE_GROUP=${RESOURCE_GROUP_INPUT:-"${APP_NAME}-rg"}
          STORAGE_NAME="${APP_NAME//-/}storage"
          PLAN_NAME="${APP_NAME}-plan"
          PLAN_SKU="${{ inputs.plan-sku }}"
          echo "Using resource group: $RESOURCE_GROUP"
          if ! az group show --name "$RESOURCE_GROUP" &>/dev/null; then
            az group create --name "$RESOURCE_GROUP" --location "$LOCATION" 1>/dev/null
          fi
          if ! az storage account show --name "$STORAGE_NAME" --resource-group "$RESOURCE_GROUP" &>/dev/null; then
            az storage account create --name "$STORAGE_NAME" --location "$LOCATION" --resource-group "$RESOURCE_GROUP" --sku Standard_LRS 1>/dev/null
          fi
          if ! az functionapp plan show --name "$PLAN_NAME" --resource-group "$RESOURCE_GROUP" &>/dev/null; then
            az functionapp plan create --name "$PLAN_NAME" --resource-group "$RESOURCE_GROUP" --location "$LOCATION" --sku "$PLAN_SKU" --is-linux 1>/dev/null
          fi
          if ! az functionapp show --name "$APP_NAME" --resource-group "$RESOURCE_GROUP" &>/dev/null; then
            az functionapp create \
              --name "$APP_NAME" \
              --resource-group "$RESOURCE_GROUP" \
              --plan "$PLAN_NAME" \
              --storage-account "$STORAGE_NAME" \
              --runtime python \
              --runtime-version "${{ inputs.python_version }}" \
              --os-type Linux \
              --functions-version 4 1>/dev/null
            echo "Created Function App $APP_NAME"
          else
            echo "Function App $APP_NAME already exists."
          fi

      - name: Deploy to Azure Function App
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ inputs.azure_function_app_name }}
          package: .
          slot-name: ${{ inputs.slot-name }}