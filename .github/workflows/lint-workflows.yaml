name: Lint Workflows

on:
  pull_request:
    paths:
      - '.github/workflows/**/*.yml'
      - '.github/workflows/**/*.yaml'
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/**/*.yml'
      - '.github/workflows/**/*.yaml'

permissions:
  contents: read

jobs:
  lint:
    name: Actionlint & Sanity
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run actionlint
        uses: docker://rhysd/actionlint:1.7.1
        # TODO: considerar pin por digest SHA.

      - name: Validar reusables possuem workflow_call
        shell: bash
        run: |
          set -euo pipefail
          DIR='.github/workflows/_reusable'
          if [ -d "$DIR" ]; then
            MISSING=$(grep -L "workflow_call:" "$DIR"/*.yml "$DIR"/*.yaml 2>/dev/null || true)
            if [ -n "$MISSING" ]; then
              printf 'Workflows reutilizáveis sem on: workflow_call\n' >&2
              printf '%s\n' "$MISSING" >&2
              exit 1
            fi
          fi
          echo "Reusables OK (workflow_call presente)" >> "$GITHUB_STEP_SUMMARY"

      - name: Validar sintaxe YAML (PyYAML)
        shell: bash
        run: |
          set -euo pipefail
          echo "Validando parsing YAML via PyYAML" >> "$GITHUB_STEP_SUMMARY"
          mapfile -t FILES < <(git ls-files \
            '.github/workflows/*.yml' \
            '.github/workflows/*.yaml' \
            '.github/workflows/_reusable/*.yml' \
            '.github/workflows/_reusable/*.yaml' 2>/dev/null || true)
          if [ "${#FILES[@]}" -eq 0 ]; then
            echo "Nenhum arquivo YAML encontrado para validar" >> "$GITHUB_STEP_SUMMARY"
            exit 0
          fi
            pip install --quiet PyYAML >/dev/null 2>&1 || true
          FAIL=0
          for f in "${FILES[@]}"; do
            if python -c "import sys,yaml; yaml.safe_load(open('$f','r',encoding='utf-8'))" 2>err.log; then
              echo "[OK] $f"
              echo "✔ $f" >> "$GITHUB_STEP_SUMMARY"
            else
              echo "[ERROR] $f" >&2
              cat err.log >&2 || true
              FAIL=1
            fi
          done
          rm -f err.log || true
          if [ $FAIL -ne 0 ]; then
            echo "Falha na validação de YAML" >&2
            exit 1
          fi
          echo "Validação básica de YAML concluída" >> "$GITHUB_STEP_SUMMARY"

      - name: Summary
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          TS=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          {
            echo "### Resultado Lint Workflows";
            echo "Execução em $TS";
          } >> "$GITHUB_STEP_SUMMARY"
