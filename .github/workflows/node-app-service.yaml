name: Build and deploy Node.js app to Azure Web App - node

on:
  workflow_call:
    inputs:
      node-version:
        required: false
        type: string
        default: '22.x'
      app-name:
        required: true
        type: string
      slot-name:
        required: false
        type: string
        default: 'Production'
      build-command:
        required: false
        type: string
        default: 'npm run build --if-present'
      test-command:
        required: false
        type: string
        default: 'npm run test --if-present'
      client-id:
        required: false
        type: string
      tenant-id:
        required: false
        type: string
      subscription-id:
        required: false
        type: string
      working-directory:
        required: false
        type: string
        default: '.'
        description: Project path
      package-artifact-name:
        required: false
        type: string
        default: 'node-app'
        description: Artifact name for build output
    secrets:
      AZURE_CREDENTIALS:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'
          cache-dependency-path: ${{ inputs.working-directory }}/package-lock.json

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: npm ci

      - name: Build
        if: ${{ inputs.build-command != '' }}
        working-directory: ${{ inputs.working-directory }}
        run: ${{ inputs.build-command }}

      - name: Test
        if: ${{ inputs.test-command != '' }}
        working-directory: ${{ inputs.working-directory }}
        run: ${{ inputs.test-command }}

      - name: Zip artifact for deployment
        run: zip -r release.zip .
        working-directory: ${{ inputs.working-directory }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.package-artifact-name }}
          path: ${{ inputs.working-directory }}/release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.package-artifact-name }}

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure with Service Principal
        if: ${{ secrets.AZURE_CREDENTIALS != '' }}
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure with OIDC
        if: ${{ secrets.AZURE_CREDENTIALS == '' }}
        uses: azure/login@v2
        with:
          client-id: ${{ inputs.client-id }}
          tenant-id: ${{ inputs.tenant-id }}
          subscription-id: ${{ inputs.subscription-id }}
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ inputs.app-name }}
          slot-name: ${{ inputs.slot-name }}
          package: .
