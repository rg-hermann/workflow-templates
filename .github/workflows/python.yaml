name: Python CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      python_version:
        description: 'Python version to use'
        required: true
        default: '3.11'
      deploy_aws:
        description: 'Deploy to AWS?'
        required: false
        default: 'false'
      aws_access_key_id:
        description: 'AWS Access Key ID'
        required: false
      aws_secret_access_key:
        description: 'AWS Secret Access Key'
        required: false
      aws_region:
        description: 'AWS Region'
        required: false
      deploy_azure:
        description: 'Deploy to Azure?'
        required: false
        default: 'false'
      azure_credentials:
        description: 'Azure Credentials (JSON)'
        required: false
      deploy_gcp:
        description: 'Deploy to GCP?'
        required: false
        default: 'false'
      gcp_credentials:
        description: 'GCP Credentials (JSON)'
        required: false
      gcp_project_id:
        description: 'GCP Project ID'
        required: false

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.python_version || '3.11' }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run tests
        run: |
          pip install pytest
          pytest

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.python_version || '3.11' }}

      - name: Deploy to AWS
        if: ${{ github.event.inputs.deploy_aws == 'true' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ github.event.inputs.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.aws_secret_access_key }}
          AWS_DEFAULT_REGION: ${{ github.event.inputs.aws_region }}
        run: |
          echo "Deploying to AWS..."
          

      - name: Deploy to Azure
        if: ${{ github.event.inputs.deploy_azure == 'true' }}
        env:
          AZURE_CREDENTIALS: ${{ github.event.inputs.azure_credentials }}
        run: |
          echo "Deploying to Azure..."
          # Adicione aqui o comando de deploy para Azure, ex: Azure CLI, etc.

      - name: Deploy to GCP
        if: ${{ github.event.inputs.deploy_gcp == 'true' }}
        env:
          GCP_CREDENTIALS: ${{ github.event.inputs.gcp_credentials }}
          GCP_PROJECT_ID: ${{ github.event.inputs.gcp_project_id }}
        run: |
          echo "${GCP_CREDENTIALS}" > gcp-creds.json
          gcloud auth activate-service-account --key-file=gcp-creds.json
          gcloud config set project "${GCP_PROJECT_ID}"
          echo "Deploying to GCP..."
          # Adicione aqui o comando de deploy para GCP, ex: gcloud CLI, etc.
